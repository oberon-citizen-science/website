---
title: "Wind farm visual impact assessment -- part 3"
description: "An exploration of methods for assessing the visual impact of proposed wind farms, in several parts. In this post we scale up computation of compound viewsheds to encompass entire wind farms."
author:
  - name: Tim Churches
date: 2024-09-18
categories: [wind farms] # self-defined categories
citation: 
  url: https://oberon-citizen.science/posts/2024-09-18-wind-farm-visual-impact-assessment-part-3/
image: compound_viewshed.png
draft: false 
lightbox: true
freeze: true
eval: true
---

::: {.callout-warning}
The viewshed maps on this page are very detailed and may take quite a while to display in many web browsers, and may not render at all on small devices such as smartphones or tablets. They are provided purely for development purposes, and final versions will be optimised for faster display.
:::

## Introduction

In the [previous post in this series](../2024-09-17-wind-farm-visual-impact-assessment-part-2/index.html) we considered compound viewsheds formed from the individual, independent viewsheds of just three of the proposed Palings Yard wind turbines, for illustrative purposes. Now we will scale up those computations to all 47 of the proposed Palings Yard turbines. This has to be done iteratively because all 47 individual viewsheds cannot fit in main memory at once. 

## Calculating compound viewsheds for larger numbers of wind turbine

```{r, include=FALSE, echo=FALSE, message=FALSE, warning=FALSE}
#| echo: false
#| message: false
#| warning: false
#| include: false

library(tidyverse)
library(scales)
library(leaflet)
library(RColorBrewer)
library(terra)
library(terrainr)
library(raster)
library(osmdata)
library(sf)

terraOptions(progress=0)

# paths to data files
wip_prefix <- "_wip/"
assets_prefix <- "assets/"
downloaded_data_prefix <- "~/NSW_Government_Spatial_Services/"

if (!file.exists(paste0(wip_prefix, "oberon_and_environs_dem_5m.tif"))) {

  # NSW Elevation Data Service
  # https://portal.spatial.nsw.gov.au/portal/apps/webappviewer/index.html?id=437c0697e6524d8ebf10ad0d915bc219
  
  wallerawang_rast <- terra::rast(paste0(downloaded_data_prefix,
                                    "Wallerawang-DEM-AHD_56_5m/Wallerawang-DEM-AHD_56_5m.asc"))
  orange_rast <- terra::rast(paste0(downloaded_data_prefix,
                                    "Orange-DEM-AHD_55_5m/Orange-DEM-AHD_55_5m.asc"))
  bathurst_rast <- terra::rast(paste0(downloaded_data_prefix,
                                      "Bathurst-DEM-AHD_55_5m/Bathurst-DEM-AHD_55_5m.asc"))
  blayney_rast <- terra::rast(paste0(downloaded_data_prefix,
                                     "Blayney-DEM-AHD_55_5m/Blayney-DEM-AHD_55_5m.asc"))
  oberon_rast <- terra::rast(paste0(downloaded_data_prefix,
                                    "Oberon-DEM-AHD_55_5m/Oberon-DEM-AHD_55_5m.asc"))
  crookwell_rast <- terra::rast(paste0(downloaded_data_prefix,
                                       "Crookwell-DEM-AHD_55_5m/Crookwell-DEM-AHD_55_5m.asc"))
  katoomba_rast <- terra::rast(paste0(downloaded_data_prefix,
                                      "Katoomba-DEM-AHD_56_5m/Katoomba-DEM-AHD_56_5m.asc"))
  taralga_rast <- terra::rast(paste0(downloaded_data_prefix,
                                     "Taralga-DEM-AHD_55_5m/Taralga-DEM-AHD_55_5m.asc"))
  burragorang_rast <- terra::rast(paste0(downloaded_data_prefix,
                                   "Burragorang-DEM-AHD_56_5m/Burragorang-DEM-AHD_56_5m.asc"))
  
  terra::writeRaster(wallerawang_rast, 
                     paste0(wip_prefix, "wallerawang_dem.tif"), 
                     overwrite=TRUE)
  terra::writeRaster(orange_rast, 
                     paste0(wip_prefix, "orange_dem.tif"), 
                     overwrite=TRUE)
  terra::writeRaster(bathurst_rast, 
                     paste0(wip_prefix, "bathurst_dem.tif"), 
                     overwrite=TRUE)
  terra::writeRaster(blayney_rast, 
                     paste0(wip_prefix, "blayney_dem.tif"), 
                     overwrite=TRUE)
  terra::writeRaster(oberon_rast, 
                     paste0(wip_prefix, "oberon_dem.tif"), 
                     overwrite=TRUE)
  terra::writeRaster(crookwell_rast, 
                     paste0(wip_prefix, "crookwell_dem.tif"), 
                     overwrite=TRUE)
  terra::writeRaster(katoomba_rast, 
                     paste0(wip_prefix, "katoomba_dem.tif"), 
                     overwrite=TRUE)
  terra::writeRaster(taralga_rast, 
                     paste0(wip_prefix, "taralga_dem.tif"), 
                     overwrite=TRUE)
  terra::writeRaster(burragorang_rast, 
                     paste0(wip_prefix, "burragorang_dem.tif"), 
                     overwrite=TRUE)
  
  rm(wallerawang_rast)
  rm(orange_rast)
  rm(bathurst_rast)
  rm(blayney_rast)
  rm(oberon_rast)
  rm(crookwell_rast)
  rm(katoomba_rast)
  rm(taralga_rast)
  rm(burragorang_rast)
  
  terrainr::merge_rasters(
    c(paste0(wip_prefix, "wallerawang_dem.tif"),
      paste0(wip_prefix, "orange_dem.tif"),
      paste0(wip_prefix, "bathurst_dem.tif"),
      paste0(wip_prefix, "blayney_dem.tif"),
      paste0(wip_prefix, "oberon_dem.tif"),
      paste0(wip_prefix, "crookwell_dem.tif"),
      paste0(wip_prefix, "katoomba_dem.tif"),
      paste0(wip_prefix, "taralga_dem.tif"),
      paste0(wip_prefix, "burragorang_dem.tif")),
     output_raster = paste0(wip_prefix, "oberon_and_environs_dem_5m.tif"),
    overwrite=TRUE)
} 

localtif <- terra::rast(paste0(wip_prefix, "oberon_and_environs_dem_5m.tif"))  


# Load turbine points
palings_yard_turbines_untransformed_sf <- sf::read_sf(paste0(assets_prefix,
                                                            "paling_yards_turbines.geojson"))
palings_yard_turbines_sf <- st_transform(palings_yard_turbines_untransformed_sf, crs=crs(localtif))
palings_yard_turbines_df <- as.data.frame(st_coordinates(palings_yard_turbines_sf))

palings_yard_turbines_untransformed_df <- as.data.frame(st_coordinates(palings_yard_turbines_untransformed_sf)) %>%
  rename(long=X, lat = Y)

pines_turbines_untransformed_sf <- sf::read_sf(paste0(assets_prefix,"Pines_Windfarm_Tower_Locations_Oct_2024.kml"))
pines_turbines_sf <- st_transform(pines_turbines_untransformed_sf, crs=crs(localtif))
pines_turbines_df <- as.data.frame(st_coordinates(pines_turbines_sf))
pines_turbines_untransformed_df <- as.data.frame(st_coordinates(pines_turbines_untransformed_sf))

# Now create the summed viewsheds for all 242 turbines in Pines
if (!file.exists(paste0(wip_prefix, "pines_vshed_number_visible.tif"))) {
  for (i in 1:nrow(pines_turbines_untransformed_sf)) {
    print(i)
    vshed_raster <- viewshed(x=localtif,
                             loc=c(st_coordinates(pines_turbines_sf[i,])[1,1:2]), 
                             observer=260,
                             target=1.5,
                             curvcoef=0.85714,
                             output="yes/no")
    vshed_raster_10m <- terra::aggregate(vshed_raster, fact=2, fun=max)
    vshed_raster_10m <- terra::ifel(vshed_raster_10m <= 0, NA, vshed_raster_10m)
  
    # sum the number of towers visible for each cell in raster
    if (i == 1) {
      vshed_number_visible <- vshed_raster_10m
    } else {
      vshed_number_visible <- sum(vshed_number_visible,
                              vshed_raster_10m,
                              na.rm = TRUE)     
    }  
    rm(vshed_raster)
    rm(vshed_raster_10m)
    gc(verbose=TRUE, full=TRUE)
  
  }
  writeRaster(vshed_number_visible, paste0(wip_prefix, "pines_vshed_number_visible.tif"))
} 

rm(localtif)

vshed_number_visible <- terra::rast(paste0(wip_prefix, "pines_vshed_number_visible.tif")) 

vshed_number_visible_20m <- terra::aggregate(vshed_number_visible, fact=2, fun=max, na.rm=TRUE)

number_visible_pal <- colorNumeric(
  palette = "Reds",
  domain = 1:242,
  reverse = FALSE,
  na.color = "transparent")

# Other features
taralga_line <- readLines(paste0(assets_prefix, "taralga_500kVA_line_v2.geojson")) %>%
                  paste(collapse = "\n")

pines_expl_area <- sf::read_sf(paste0(assets_prefix, "pines_exploration_area_v15.geojson"))

oberon_boundary <- sf::read_sf(paste0(assets_prefix, "nsw-lga-boundaries.geojson")) %>%
                      filter(abb_name == "Oberon")

```

In this step, we will calculate the cumulative viewshed for all of the 242 turbines proposed for the Pines wind farm, assuming each one is 260m tall near the tip of the blade. 

We can examine the distribution of the number of turbines visible from each pixel in the cumulative viewshed raster. Note that zero turbines are visible from the vast majority of pixels -- these have been excluded from the histogram shown below.


```{r, fig.asp=0.8}
#| echo: false
#| message: false
#| warning: false

vshed_number_visible_df <- as.data.frame(vshed_number_visible) %>%
                              mutate(number_visible = viewshed)
                              # mutate(number_visible = factor(viewshed))

vshed_number_visible_df  %>%
  ggplot(aes(x=number_visible)) +
    geom_bar(colour="orange", fill="orange") + 
    scale_x_continuous(limits = c(1, 242), breaks = seq(0,240,10)) +
    coord_flip() +
    labs(x="Number of turbines visible from each pixel in raster",
         y="Number of pixels",
         caption = "Note: Pixels from which no turbines are visible are excluded") +
    theme_minimal()
         
```


The map below shows the cumulative viewshed (with Earth curvature and atmospheric refraction corrections) for all 242 of the proposed Pines wind turbines, each 260m tall near the tip of the uppermost blade, at the indicated positions. The compound viewshed is shaded by the number of turbines visible from each point on the map.

:::{.column-page}

```{r}
#| echo: false
#| message: false
#| warning: false

leaflet(height="800px", width="1200px") %>% 
  setView(lng = pines_turbines_untransformed_df[20,1],
          lat = pines_turbines_untransformed_df[20,2],
          zoom = 10) %>%
  addProviderTiles("Esri.WorldImagery", group="Imagery") %>%
  addProviderTiles("Esri.WorldShadedRelief", group="Shaded relief") %>%
  addProviderTiles("OpenTopoMap", group="Topography") %>%
  addTiles(group = "OpenStreetMap") %>%
  addRasterImage(vshed_number_visible_20m, 
                 opacity=0.6, 
                 colors = number_visible_pal,
                  group = "Cumulative viewshed for all 242 turbines",
                  maxBytes = 4 * 8330 * 8801) %>%
  addLegend(
    position = "bottomright",
    pal = number_visible_pal,
    values = 1:242,
    labels = palette(),
    title = "Number of turbines visible") %>%  
  addCircleMarkers(lng = pines_turbines_untransformed_df[,1],
                   lat = pines_turbines_untransformed_df[,2],
              group = "Proposed Pines turbines",
              color = "cyan",
              radius = 5,
              stroke = FALSE,
              fillOpacity = 0.5) %>%  
  addPolygons(data=oberon_boundary,
              stroke=TRUE, 
              weight=4, 
              fillOpacity=0.1, 
              color="orange",
              group = "Oberon LGA") %>%
    addGeoJSON(taralga_line, 
             weight=3, 
             color="blue", 
             fillOpacity=0,
             group = "500 kVA transmission line (partial)") %>%
  addLayersControl(baseGroups = c("Imagery", "Shaded relief", "Topography", "OpenStreetMap"),
                   overlayGroups = c( "Oberon LGA",
                                      "500 kVA transmission line (partial)",
                                      "Proposed Pines turbines",
                                      "Cumulative viewshed for all 242 turbines"),
                   options = layersControlOptions(collapsed = FALSE)
  ) %>%
  addMeasure(
            position = "bottomleft",
            primaryLengthUnit = "kilometers",
            primaryAreaUnit = "hectares",
            activeColor = "#3D535D",
            completedColor = "#7D4479",
            localization = "en")
```

:::

## Software

The software used for this post is as described in the [first post](../2024-09-16-wind-farm-visual-impact-assessment-part-1/index.html#software) in this series. 

The source code for this blog post, which contains all the code used to create it, can be found on [Github](https://github.com/oberon-citizen-science/website/blob/main/posts/2024-09-18-wind-farm-visual-impact-assessment-part-3/index.qmd).


## Next steps

In the [next in this series of blog posts](../2024-09-19-wind-farm-visual-impact-assessment-part-4/index.html) we will compute the full visual impact metric set out in [this paper](https://www.sciencedirect.com/science/article/pii/S016920462200072X).

