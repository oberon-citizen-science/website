---
title: "Visual Impact Assessment capability development - phase 1"
---

::: {.callout-warning}
The viewshed maps on this page are very detailed and may take quite a while to display in many web browsers, and may not render at all on small devices such as smartphones or tablets. They are provided purely for development purposes, and final versions will be optimised for faster display.
:::

## Illustrating the effect of Earth curvature and atmospheric refraction correction in viewshed calculations

```{r, include=FALSE, echo=FALSE, message=FALSE, warning=FALSE}
#| echo: false
#| message: false
#| warning: false
#| include: false

library(tidyverse)
library(leaflet)
library(RColorBrewer)
library(terra)
library(terrainr)
library(raster)
library(osmdata)
library(sf)

terraOptions(progress=0)

# NSW Elevation Data Service
# https://portal.spatial.nsw.gov.au/portal/apps/webappviewer/index.html?id=437c0697e6524d8ebf10ad0d915bc219

wrightville_rast <- terra::rast("~/NSW_Government_Spatial_Services/Wrightville-DEM-AHD_55_5m/Wrightville-DEM-AHD_55_5m.asc")
sussex_rast <- terra::rast("~/NSW_Government_Spatial_Services/Sussex-DEM-AHD_55_5m/Sussex-DEM-AHD_55_5m.asc")
cobar_rast <- terra::rast("~/NSW_Government_Spatial_Services/Cobar-DEM-AHD_55_5m/Cobar-DEM-AHD_55_5m.asc")
canbelego_rast <- terra::rast("~/NSW_Government_Spatial_Services/Canbelego-DEM-AHD_55_5m/Canbelego-DEM-AHD_55_5m.asc")
louth_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/Louth-DEM-AHD_55_5m/Louth-DEM-AHD_55_5m.asc")
booroondarra_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/Booroondarra-DEM-AHD_55_5m/Booroondarra-DEM-AHD_55_5m.asc")
themeadows_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/TheMeadows-DEM-AHD_55_5m/TheMeadows-DEM-AHD_55_5m.asc")
keewong_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/Keewong-DEM-AHD_55_5m/Keewong-DEM-AHD_55_5m.asc")
lachlandowns_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/LachlanDowns-DEM-AHD_55_5m/LachlanDowns-DEM-AHD_55_5m.asc")
nymagee_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/Nymagee-DEM-AHD_55_5m/Nymagee-DEM-AHD_55_5m.asc")
bobadah_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/Bobadah-DEM-AHD_55_5m/Bobadah-DEM-AHD_55_5m.asc")
hermidale_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/Hermidale-DEM-AHD_55_5m/Hermidale-DEM-AHD_55_5m.asc")
glenariff_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/Glenariff-DEM-AHD_55_5m/Glenariff-DEM-AHD_55_5m.asc")
coolabah_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/Coolabah-DEM-AHD_55_5m/Coolabah-DEM-AHD_55_5m.asc")
byrock_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/Byrock-DEM-AHD_55_5m/Byrock-DEM-AHD_55_5m.asc")
gunderbooka_rast <- terra::rast(  "~/NSW_Government_Spatial_Services/Gunderbooka-DEM-AHD_55_5m/Gunderbooka-DEM-AHD_55_5m.asc")

terra::writeRaster(wrightville_rast, "_wip/wrightville_dem.tif", overwrite=TRUE)
terra::writeRaster(sussex_rast, "_wip/sussex_dem.tif", overwrite=TRUE)
terra::writeRaster(cobar_rast, "_wip/cobar_dem.tif", overwrite=TRUE)
terra::writeRaster(canbelego_rast, "_wip/canbelego_dem.tif", overwrite=TRUE)
terra::writeRaster(louth_rast, "_wip/louth_dem.tif", overwrite=TRUE)
terra::writeRaster(booroondarra_rast, "_wip/booroondarra_dem.tif", overwrite=TRUE)
terra::writeRaster(themeadows_rast, "_wip/themeadows_dem.tif", overwrite=TRUE)
terra::writeRaster(keewong_rast, "_wip/keewong_dem.tif", overwrite=TRUE)
terra::writeRaster(lachlandowns_rast, "_wip/lachlandowns_dem.tif", overwrite=TRUE)
terra::writeRaster(nymagee_rast, "_wip/nymagee_dem.tif", overwrite=TRUE)
terra::writeRaster(bobadah_rast, "_wip/bobadah_dem.tif", overwrite=TRUE)
terra::writeRaster(hermidale_rast, "_wip/hermidale_dem.tif", overwrite=TRUE)
terra::writeRaster(glenariff_rast, "_wip/glenariff_dem.tif", overwrite=TRUE)
terra::writeRaster(coolabah_rast, "_wip/coolabah_dem.tif", overwrite=TRUE)
terra::writeRaster(byrock_rast, "_wip/byrock_dem.tif", overwrite=TRUE)
terra::writeRaster(gunderbooka_rast, "_wip/gunderbooka_dem.tif", overwrite=TRUE)

rm(wrightville_rast)
rm(sussex_rast)
rm(cobar_rast)
rm(canbelego_rast)
rm(louth_rast)
rm(booroondarra_rast)
rm(themeadows_rast)
rm(keewong_rast)
rm(lachlandowns_rast)
rm(nymagee_rast)
rm(bobadah_rast)
rm(hermidale_rast)
rm(glenariff_rast)
rm(coolabah_rast)
rm(byrock_rast)
rm(gunderbooka_rast)

terrainr::merge_rasters(
  c("_wip/wrightville_dem.tif", "_wip/sussex_dem.tif",
    "_wip/cobar_dem.tif", "_wip/canbelego_dem.tif",
    "_wip/louth_dem.tif", "_wip/booroondarra_dem.tif",
    "_wip/themeadows_dem.tif", "_wip/keewong_dem.tif",
    "_wip/lachlandowns_dem.tif", "_wip/nymagee_dem.tif",
    "_wip/bobadah_dem.tif", "_wip/hermidale_dem.tif",
    "_wip/glenariff_dem.tif", "_wip/coolabah_dem.tif",
    "_wip/byrock_dem.tif", "_wip/gunderbooka_dem.tif"),
   output_raster = "_wip/cobar_and_environs_dem_5m.tif",
  overwrite=TRUE)

localtif <- terra::rast("_wip/cobar_and_environs_dem_5m.tif")  

# Load points
demo_turbine <- tibble::tribble(~lat, ~long,
# Cobar
-31.487967, 145.807918)

demo_turbine_sf <- sf::st_as_sf(x = demo_turbine,                         
           coords = c("long", "lat"),
           crs = CRS("+init=epsg:4326"))

demo_turbine_sf <- sf::st_transform(demo_turbine_sf, crs = terra::crs(localtif))

vshed_terra_no_correction <- viewshed(x=localtif,
                        loc=c(st_coordinates(demo_turbine_sf)), 
                        observer=10,
                        target=1.8,
                        curvcoef=0,
                        output="yes/no",
                        filename="_wip/terra_vshed_validate_no_correction.tif",
                        overwrite=TRUE)

terra_raster_no_correction <- terra::rast("_wip/terra_vshed_validate_no_correction.tif")

terra_raster_no_correction <- terra::ifel(terra_raster_no_correction <= 0, NA, terra_raster_no_correction)

terra_raster_no_correction_20m <- terra::aggregate(terra_raster_no_correction, fact=4, fun=max)
rm(terra_raster_no_correction)

vshed_terra <- viewshed(x=localtif,
                        loc=c(st_coordinates(demo_turbine_sf)), 
                        observer=10,
                        target=1.8,
                        curvcoef=0.85714,
                        output="yes/no",
                        filename="_wip/terra_vshed_correction_validate.tif",
                        overwrite=TRUE)

terra_raster <- terra::rast("_wip/terra_vshed_correction_validate.tif")

terra_raster <- terra::ifel(terra_raster <= 0, NA, terra_raster)

terra_raster_20m <- terra::aggregate(terra_raster, fact=4, fun=max)

rm(terra_raster)
rm(localtif)

terra_no_correction_pal <- colorNumeric(c("red"), 1,
  na.color = "transparent")

terra_pal <- colorNumeric(c("cyan"), 1,
  na.color = "transparent")

cobar_tower <- vect(cbind(st_coordinates(demo_turbine_sf)), crs=crs(terra_raster_20m))
tower_dist <- distance(terra_raster_20m, cobar_tower)

terra_raster_20m_dist <- terra_raster_20m * tower_dist

dist_pal <- colorNumeric(palette = "Reds", domain = minmax(terra_raster_20m_dist), reverse = TRUE)

binned_dist_pal <- colorBin(palette = "Reds", 
                            domain = minmax(terra_raster_20m_dist),
                            bins = c(800, 3200, 8100, 16100, 32200, 64400),
                            reverse = TRUE)

```

By toggling on and off the two viewshed layers on the map below, you can compare  the results of using the `terra::viewshed()` with Earth curvature and atmospheric refraction correction disabled, and `terra::viewshed()` with correction enabled using the default co-efficient of 0.85714.

The calculated viewsheds are for a mythical 10m high tower viewpoint near the centre of Cobar in western NSW, where the terrain is quite flat.

It is easy to see that without the correction, the calculated viewshed is much larger because the curvature of the Earth is ignored (although refraction by the atmosphere counteracts the effects of curvature, but only partially).

This is the first step in developing documented, reproducible, open-source capabilities for visual impact assessment of large structures such as wind turbines. The intention is to implement many of the metrics and enhancements to simple viewsheds described in [this paper](https://www.sciencedirect.com/science/article/pii/S016920462200072X).

:::{.column-page}

```{r}
#| echo: false
#| message: false
#| warning: false

leaflet(height="800px", width="1200px") %>% 
  setView(lng = 145.81, lat = -31.49, zoom = 8.5) %>%
  addProviderTiles("Esri.WorldShadedRelief", group="Shaded relief") %>%
  addProviderTiles("OpenTopoMap", group="Topography") %>%
  addTiles(group = "OpenStreetMap") %>%
  addProviderTiles("Esri.WorldImagery", group="Imagery") %>%
  addRasterImage(terra_raster_no_correction_20m, 
                 opacity=0.4, 
                 colors = terra_no_correction_pal,
                  group = "Putative 10m tower viewshed (no curvature)",
                  maxBytes = 4 * 8330 * 8801) %>%
  addRasterImage(terra_raster_20m, 
                 opacity=0.6, 
                 colors = terra_pal,
                  group = "Putative 10m tower viewshed (curvature)",
                  maxBytes = 4 * 8330 * 8801) %>%
  addMarkers(lng=145.807918,
             lat=-31.487967,  
             label = "Putative 10m tower",
              group = "Putative 10m tower",
              labelOptions = labelOptions(noHide = TRUE, textsize = "10px")) %>%  
  addLayersControl(baseGroups = c("Shaded relief", "Topography", "OpenStreetMap", "Imagery"),
                   overlayGroups = c( "Putative 10m tower viewshed (no curvature)",
                                      "Putative 10m tower viewshed (curvature)"),
                   options = layersControlOptions(collapsed = FALSE)
  ) %>%
  addMeasure(
            position = "bottomleft",
            primaryLengthUnit = "kilometers",
            primaryAreaUnit = "hectares",
            activeColor = "#3D535D",
            completedColor = "#7D4479",
            localization = "en") %>%
  addScaleBar(position = "bottomright",
  options = scaleBarOptions(metric=TRUE, 
                            imperial=FALSE,
                            maxWidth=300,
                            updateWhenIdle=TRUE))

                    
```

:::


## Viewshed shaded by distance from tower

This is the same viewshed as above (with curvature and refraction corrections enabled), but shaded by distance from the tower to de-emphasise distance viewpoints. This is a first step towards representing visual impact. 

:::{.column-page}

```{r, eval=TRUE}
#| echo: false
#| message: false
#| warning: false

leaflet(height="800px", width="1200px") %>% 
  setView(lng = 145.81, lat = -31.49, zoom = 10) %>%
  addProviderTiles("Esri.WorldShadedRelief", group="Shaded relief") %>%
  addProviderTiles("OpenTopoMap", group="Topography") %>%
  addTiles(group = "OpenStreetMap") %>%
  addProviderTiles("Esri.WorldImagery", group="Imagery") %>%
  addRasterImage(terra_raster_20m_dist, 
                 opacity=0.6, 
                  colors = dist_pal,
                  group = "Putative 10m tower viewshed (curvature)",
                  maxBytes = 4 * 8330 * 8801) %>%
  addLegend(
    position = "bottomright",
    pal = dist_pal,
    labels = palette(), opacity = 0.6,
    values = minmax(terra_raster_20m_dist),
    title = "Distance from tower",
    labFormat = labelFormat(suffix = " km",
                            transform = function(x) x / 1000)) %>%  
  addMarkers(lng=145.807918,
             lat=-31.487967,  
             label = "Putative 10m tower",
              group = "Putative 10m tower",
              labelOptions = labelOptions(noHide = TRUE, textsize = "10px")) %>%  
  addLayersControl(baseGroups = c("Shaded relief", "Topography", "OpenStreetMap", "Imagery"),
                   overlayGroups = c( "Putative 10m tower viewshed (curvature)"),
                   options = layersControlOptions(collapsed = FALSE)
  ) %>%
  addMeasure(
            position = "bottomleft",
            primaryLengthUnit = "kilometers",
            primaryAreaUnit = "hectares",
            activeColor = "#3D535D",
            completedColor = "#7D4479",
            localization = "en") %>%
  addScaleBar(position = "bottomright",
  options = scaleBarOptions(metric=TRUE, 
                            imperial=FALSE,
                            maxWidth=300,
                            updateWhenIdle=TRUE))

```

:::

### Viewshed shaded by distance bands from tower

This is the same viewshed as above (with curvature and refraction corrections), but shaded by distance categorised into bands as suggested by James F. Palmer in [the paper mentioned above](https://www.sciencedirect.com/science/article/pii/S016920462200072X).

:::{.column-page}

```{r, eval=TRUE}
#| echo: false
#| message: false
#| warning: false

binned_dist_pal <- colorBin(palette = "Reds", 
                            domain = minmax(terra_raster_20m_dist),
                            bins = c(800, 3200, 8100, 16100, 32200, 64400),
                            reverse = TRUE)

leaflet(height="800px", width="1200px") %>% 
  setView(lng = 145.81, lat = -31.49, zoom = 10) %>%
  addProviderTiles("Esri.WorldShadedRelief", group="Shaded relief") %>%
  addProviderTiles("OpenTopoMap", group="Topography") %>%
  addTiles(group = "OpenStreetMap") %>%
  addProviderTiles("Esri.WorldImagery", group="Imagery") %>%
  addRasterImage(terra_raster_20m_dist, 
                 opacity=0.6, 
                  colors = binned_dist_pal,
                  group = "Putative 10m tower viewshed (curvature)",
                  maxBytes = 4 * 8330 * 8801) %>%
  addLegend(
    position = "bottomright",
    pal = binned_dist_pal,
    labels = palette(), opacity = 0.6,
    values = minmax(terra_raster_20m_dist),
    title = "Distance from tower",
    labFormat = labelFormat(suffix = " km",
                            transform = function(x) x / 1000)) %>%  
  addMarkers(lng=145.807918,
             lat=-31.487967,  
             label = "Putative 10m tower",
              group = "Putative 10m tower",
              labelOptions = labelOptions(noHide = TRUE, textsize = "10px")) %>%  
  addLayersControl(baseGroups = c("Shaded relief", "Topography", "OpenStreetMap", "Imagery"),
                   overlayGroups = c( "Putative 10m tower viewshed (curvature)"),
                   options = layersControlOptions(collapsed = FALSE)
  ) %>%
  addMeasure(
            position = "bottomleft",
            primaryLengthUnit = "kilometers",
            primaryAreaUnit = "hectares",
            activeColor = "#3D535D",
            completedColor = "#7D4479",
            localization = "en") %>%
  addScaleBar(position = "bottomright",
  options = scaleBarOptions(metric=TRUE, 
                            imperial=FALSE,
                            maxWidth=300,
                            updateWhenIdle=TRUE))

```

:::

### Viewshed distance bands as separate layers

This is essentially the same map as the one above, but each distance zone is represented as a separate layer which can be toggled on and off. This may not be particularly useful.

:::{.column-page}

```{r}
#| echo: false
#| message: false
#| warning: false

binned_dist_pal <- colorBin(palette = "Reds", 
                            domain = minmax(terra_raster_20m_dist),
                            bins = c(800, 3200, 8100, 16100, 32200, 64400),
                            reverse = TRUE)

terra_raster_0_800 <- terra::ifel(terra_raster_20m_dist < 800, 
                                  terra_raster_20m_dist,
                                  NA) %>% trim()

terra_raster_800_3200 <- terra::ifel(terra_raster_20m_dist >= 800 & terra_raster_20m_dist < 3200,
                                     terra_raster_20m_dist,
                                     NA) %>% trim()

terra_raster_3200_8100 <- terra::ifel(terra_raster_20m_dist >= 3200 & terra_raster_20m_dist < 8100,
                                      terra_raster_20m_dist,
                                      NA) %>% trim()

terra_raster_8100_16100 <- terra::ifel(terra_raster_20m_dist >= 8100 & terra_raster_20m_dist < 16100,
                                       terra_raster_20m_dist,
                                       NA) %>% trim()

terra_raster_16100_32200 <- terra::ifel(terra_raster_20m_dist >= 16100 & terra_raster_20m_dist < 32200,
                                       terra_raster_20m_dist,
                                       NA) %>% trim()

terra_raster_32200_64400 <- terra::ifel(terra_raster_20m_dist >= 32200 & terra_raster_20m_dist < 64400,
                                       terra_raster_20m_dist,
                                       NA) %>% trim()

leaflet(height="800px", width="1200px") %>% 
  setView(lng = 145.81, lat = -31.49, zoom = 10) %>%
  addProviderTiles("Esri.WorldShadedRelief", group="Shaded relief") %>%
  addProviderTiles("OpenTopoMap", group="Topography") %>%
  addTiles(group = "OpenStreetMap") %>%
  addProviderTiles("Esri.WorldImagery", group="Imagery") %>%
  addRasterImage(terra_raster_0_800, 
                 opacity=0.6, 
                 colors = "Purple", # binned_dist_pal,
                 group = "0 to 800 m",
                 maxBytes = 4 * 8330 * 8801) %>%
  addRasterImage(terra_raster_800_3200, 
                 opacity=0.6, 
                 colors = "Red", # binned_dist_pal,
                 group = "800 m to 3.2 km",
                 maxBytes = 4 * 8330 * 8801) %>%
  addRasterImage(terra_raster_3200_8100, 
                 opacity=0.6, 
                 colors = "Orange", # binned_dist_pal,
                 group = "3.2 to 8.1 km",
                 maxBytes = 4 * 8330 * 8801) %>%
  addRasterImage(terra_raster_8100_16100, 
                 opacity=0.6, 
                 colors = "Pink", # binned_dist_pal,
                 group = "8.1 to 16.1 km",
                 maxBytes = 4 * 8330 * 8801) %>%
  addRasterImage(terra_raster_16100_32200, 
                 opacity=0.6, 
                 colors = "Yellow", # binned_dist_pal,
                 group = "16.1 to 32.2 km",
                 maxBytes = 4 * 8330 * 8801) %>%
  addRasterImage(terra_raster_32200_64400, 
                 opacity=0.6, 
                 colors = "White", # binned_dist_pal,
                 group = "32.2 to 64.4 km",
                 maxBytes = 4 * 8330 * 8801) %>%
  addMarkers(lng=145.807918,
             lat=-31.487967,  
             label = "Putative 10m tower",
              group = "Putative 10m tower",
              labelOptions = labelOptions(noHide = FALSE, textsize = "10px")) %>%  
  addLayersControl(baseGroups = c("Shaded relief", "Topography", "OpenStreetMap", "Imagery"),
                   overlayGroups = c("0 to 800 m",
                                     "800 m to 3.2 km",
                                     "3.2 to 8.1 km",
                                     "8.1 to 16.1 km",
                                     "16.1 to 32.2 km",
                                     "32.2 to 64.4 km"),
                   options = layersControlOptions(collapsed = FALSE)
  ) %>%
  addMeasure(
            position = "bottomleft",
            primaryLengthUnit = "kilometers",
            primaryAreaUnit = "hectares",
            activeColor = "#3D535D",
            completedColor = "#7D4479",
            localization = "en") %>%
  addScaleBar(position = "bottomright",
  options = scaleBarOptions(metric=TRUE, 
                            imperial=FALSE,
                            maxWidth=300,
                            updateWhenIdle=TRUE))

```

:::
